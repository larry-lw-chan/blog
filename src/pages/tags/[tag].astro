---
import BaseLayout from "../../layouts/BaseLayout.astro";
import BlogPost from "../../components/BlogPost.astro";

interface FilteredPost {
  url: string | URL | null | undefined;
  frontmatter: {
    title: unknown;
    tags: string[];
    pubDate: Date;
    author: string;
    description: string;
  };
}

export async function getStaticPaths() {
  const allPosts: FilteredPost[] = await Astro.glob("../posts/*.md");
  const uniqueTags = [
    ...new Set(allPosts.map((post) => post.frontmatter.tags).flat()),
  ];

  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) =>
      post.frontmatter.tags.includes(tag),
    );
    return {
      params: { tag }, // Define name of a page route based off tag
      props: { posts: filteredPosts }, // Places filtered posts into Astro.props
    };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props;
---

<BaseLayout pageTitle={tag}>
  <p>Posts tagged with <mark>{tag}</mark></p>
  <ul>
    {
      posts.map((post: FilteredPost) => (
        <>
          <BlogPost
            url={post.url}
            title={post.frontmatter.title}
            pubDate={post.frontmatter.pubDate}
            description={post.frontmatter.description}
          />
        </>
      ))
    }
  </ul>
</BaseLayout>
